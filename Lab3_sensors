/*

LAB 3- Use mapping, calibration and constrain
Alisa Maria Wronski 
DIGF2B03 PhysicalComputing
OCAD University
Created on Jan 30 2015

Based on:
Calibration Example, Free Domain,  http://arduino.cc/en/Tutorial/Calibration
Constrain Example, Arduino Reference, http://arduino.cc/en/reference/constrain

 
 */

// These constants won't change:
const int sensorPin = A0;    // pin that the sensor is attached to
const int ledPin = 11;       // pin that the LED is attached to
const int ledPin2 = 10;   
const int ledPin3 = 6;   



// variables:
int sensorValue = 0;         // the sensor value
int sensorMin = 500;        // minimum sensor value
int sensorMax = 0;     


void setup() {
  // turn on LED to signal the start of the calibration period:
  pinMode(ledPin, OUTPUT);
  digitalWrite(ledPin, HIGH);
  pinMode(ledPin2, OUTPUT);
  digitalWrite(ledPin2, HIGH);  
  pinMode(ledPin3, OUTPUT);
  digitalWrite(ledPin3, HIGH);

  // calibrate during the first five seconds 
  while (millis() < 5000) {
    sensorValue = analogRead(sensorPin);

    // record the maximum sensor value
    if (sensorValue > sensorMax) {
      sensorMax = sensorValue;
    }

    // record the minimum sensor value
    if (sensorValue < sensorMin) {
      sensorMin = sensorValue;
    }
  }

  // signal the end of the calibration period
  digitalWrite(ledPin, LOW);  
  digitalWrite(ledPin2, LOW);
  digitalWrite(ledPin3, LOW);


}

void loop() {
  // read the sensor:
  sensorValue = analogRead(sensorPin);

  // apply the calibration to the sensor reading
  sensorValue = map(sensorValue, sensorMin, sensorMax, 255, 0);

// here we did the mapping, we switched the 255 and 0 to reverese the command 
// so when your hand is over the sensor the light turns on

  // in case the sensor value is outside the range seen during calibration
  sensorValue = constrain(sensorValue, 0, 255);

  // fade the LED using the calibrated value:
  analogWrite(ledPin, sensorValue);
  analogWrite(ledPin2, sensorValue);
  analogWrite(ledPin3, sensorValue);


}
